"""empty message

Revision ID: 45dee703ce9c
Revises: 8db8c21a3797
Create Date: 2025-02-27 16:32:22.220193

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '45dee703ce9c'
down_revision: Union[str, None] = '8db8c21a3797'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('CourierReview')
    op.drop_index('ix_Category_category_name', table_name='Category')
    op.drop_index('ix_Category_id', table_name='Category')
    op.drop_table('Category')
    op.drop_table('refresh_token')
    op.drop_table('StoreReview')
    op.drop_table('Product')
    op.drop_table('ProductCombo')
    op.drop_table('Courier')
    op.drop_table('Store')
    op.drop_table('Contact')
    op.drop_table('UserProfile')
    op.drop_table('Order')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Order',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Order_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('delivery_address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('type1', 'type2', 'type3', 'type4', name='orderrole'), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('courier_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['UserProfile.id'], name='Order_client_id_fkey'),
    sa.ForeignKeyConstraint(['courier_id'], ['UserProfile.id'], name='Order_courier_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Order_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('UserProfile',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"UserProfile_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('courier', 'client', 'owner', name='userrole'), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='UserProfile_pkey'),
    sa.UniqueConstraint('username', name='UserProfile_username_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Contact',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('store_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['Store.id'], name='Contact_store_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Contact_pkey')
    )
    op.create_table('Store',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"Store_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('store_name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('store_description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('store_image', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['Category.id'], name='Store_category_id_fkey'),
    sa.ForeignKeyConstraint(['owner_id'], ['UserProfile.id'], name='Store_owner_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Store_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('Courier',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('courier1', 'courier2', name='courierrole'), autoincrement=False, nullable=False),
    sa.Column('order_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['Order.id'], name='Courier_order_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['UserProfile.id'], name='Courier_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Courier_pkey')
    )
    op.create_table('ProductCombo',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=8, scale=2), autoincrement=False, nullable=False),
    sa.Column('image', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('store_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['Store.id'], name='ProductCombo_store_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='ProductCombo_pkey')
    )
    op.create_table('Product',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('product_name', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('product_description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=8, scale=2), autoincrement=False, nullable=False),
    sa.Column('product_image', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('store_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['Store.id'], name='Product_store_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='Product_pkey')
    )
    op.create_table('StoreReview',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('store_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('comment', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('rating', postgresql.ENUM('review1', 'review2', 'review3', 'review4', 'review5', name='reviewchoices'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['UserProfile.id'], name='StoreReview_client_id_fkey'),
    sa.ForeignKeyConstraint(['store_id'], ['Store.id'], name='StoreReview_store_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='StoreReview_pkey')
    )
    op.create_table('refresh_token',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['UserProfile.id'], name='refresh_token_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='refresh_token_pkey')
    )
    op.create_table('Category',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('category_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='Category_pkey')
    )
    op.create_index('ix_Category_id', 'Category', ['id'], unique=False)
    op.create_index('ix_Category_category_name', 'Category', ['category_name'], unique=True)
    op.create_table('CourierReview',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('courier_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('client_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('created_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('rating', postgresql.ENUM('review1', 'review2', 'review3', 'review4', 'review5', name='reviewchoices'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['UserProfile.id'], name='CourierReview_client_id_fkey'),
    sa.ForeignKeyConstraint(['courier_id'], ['UserProfile.id'], name='CourierReview_courier_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='CourierReview_pkey')
    )
    # ### end Alembic commands ###
